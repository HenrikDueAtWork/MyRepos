//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Samples.SqlServer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Samples.SqlServer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ADOMD.NET Connection error on connect string ({0}): {1}.
        /// </summary>
        internal static string locAdomdConnectErr {
            get {
                return ResourceManager.GetString("locAdomdConnectErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ADOMD.NET disconnect error: {0}.
        /// </summary>
        internal static string locAdomdDisconnErr {
            get {
                return ResourceManager.GetString("locAdomdDisconnErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MDX query execution error: {0}.
        /// </summary>
        internal static string locAdomdExecutionErr {
            get {
                return ResourceManager.GetString("locAdomdExecutionErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AMO connection error on connect string ({0}): {1}.
        /// </summary>
        internal static string locAmoConnErr {
            get {
                return ResourceManager.GetString("locAmoConnErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AMO disconnect error: {0}.
        /// </summary>
        internal static string locAmoDisconnErr {
            get {
                return ResourceManager.GetString("locAmoDisconnErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XMLA script execution error: {0}.
        /// </summary>
        internal static string locAmoExecutionErr {
            get {
                return ResourceManager.GetString("locAmoExecutionErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the output file for errors..
        /// </summary>
        internal static string locCheckOutputForErr {
            get {
                return ResourceManager.GetString("locCheckOutputForErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Exit file &apos;{0}&apos; already exists.
        /// </summary>
        internal static string locExitFileExistsErr {
            get {
                return ResourceManager.GetString("locExitFileExistsErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution failed: {0}.
        /// </summary>
        internal static string locFailedErr {
            get {
                return ResourceManager.GetString("locFailedErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception trying to impersonate user: {0}.
        /// </summary>
        internal static string locImpersonateErr {
            get {
                return ResourceManager.GetString("locImpersonateErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify either -i or -Q..
        /// </summary>
        internal static string locInpEitherErr {
            get {
                return ResourceManager.GetString("locInpEitherErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input file ({0}) is empty; nothing to execute..
        /// </summary>
        internal static string locInpFileEmptyErr {
            get {
                return ResourceManager.GetString("locInpFileEmptyErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input file ({0}) error: {1}.
        /// </summary>
        internal static string locInpFileGeneralErr {
            get {
                return ResourceManager.GetString("locInpFileGeneralErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input file ({0}) does not exist..
        /// </summary>
        internal static string locInpFileNotExistErr {
            get {
                return ResourceManager.GetString("locInpFileNotExistErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot specify both -i and -Q at the same time..
        /// </summary>
        internal static string locInpNotBothErr {
            get {
                return ResourceManager.GetString("locInpNotBothErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} option ({1}) is not a valid integer..
        /// </summary>
        internal static string locIntegerErr {
            get {
                return ResourceManager.GetString("locIntegerErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} name (&apos;{1}&apos;) has an invalid character at position {2}..
        /// </summary>
        internal static string locInvalidCharErr {
            get {
                return ResourceManager.GetString("locInvalidCharErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;LogOnUser&apos; failed with error code: {0}.
        /// </summary>
        internal static string locLogonFailedErr {
            get {
                return ResourceManager.GetString("locLogonFailedErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} name (&apos;{1}&apos; which is {2} characters) is more than the maximum length of {3}..
        /// </summary>
        internal static string locMaxErr {
            get {
                return ResourceManager.GetString("locMaxErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} name (&apos;{1}&apos; which is {2} characters) is less than the minimum length of {3}..
        /// </summary>
        internal static string locMinErr {
            get {
                return ResourceManager.GetString("locMinErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database.
        /// </summary>
        internal static string locNameDatabase {
            get {
                return ResourceManager.GetString("locNameDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain.
        /// </summary>
        internal static string locNameDomain {
            get {
                return ResourceManager.GetString("locNameDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance.
        /// </summary>
        internal static string locNameInstance {
            get {
                return ResourceManager.GetString("locNameInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file.
        /// </summary>
        internal static string locNameOutputFile {
            get {
                return ResourceManager.GetString("locNameOutputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output Result Stat file.
        /// </summary>
        internal static string locNameOutputResultStatFile {
            get {
                return ResourceManager.GetString("locNameOutputResultStatFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        internal static string locNamePassword {
            get {
                return ResourceManager.GetString("locNamePassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        internal static string locNameServer {
            get {
                return ResourceManager.GetString("locNameServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trace file.
        /// </summary>
        internal static string locNameTraceFile {
            get {
                return ResourceManager.GetString("locNameTraceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name.
        /// </summary>
        internal static string locNameUsername {
            get {
                return ResourceManager.GetString("locNameUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no query or script to execute..
        /// </summary>
        internal static string locNoInpErr {
            get {
                return ResourceManager.GetString("locNoInpErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The query specified by the -Q option is empty..
        /// </summary>
        internal static string locOptionQEmptyErr {
            get {
                return ResourceManager.GetString("locOptionQEmptyErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The -U option must be in the format &lt;domain&gt;\&lt;user name&gt;..
        /// </summary>
        internal static string locOptionUFormatErr {
            get {
                return ResourceManager.GetString("locOptionUFormatErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file close error: {0}.
        /// </summary>
        internal static string locOutputFileCloseErr {
            get {
                return ResourceManager.GetString("locOutputFileCloseErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file error: {0}.
        /// </summary>
        internal static string locOutputFileErr {
            get {
                return ResourceManager.GetString("locOutputFileErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file open error: {0}.
        /// </summary>
        internal static string locOutputFileOpenErr {
            get {
                return ResourceManager.GetString("locOutputFileOpenErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing the command line failed: {0}.
        /// </summary>
        internal static string locParseArgsErr {
            get {
                return ResourceManager.GetString("locParseArgsErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is missing its argument..
        /// </summary>
        internal static string locParseMissingArgErr {
            get {
                return ResourceManager.GetString("locParseMissingArgErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} option ({1}) must be greater than zero, but less than {2}..
        /// </summary>
        internal static string locRangeErr {
            get {
                return ResourceManager.GetString("locRangeErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;{0}&apos; cannot be specified multiple times..
        /// </summary>
        internal static string locRepeatedOption {
            get {
                return ResourceManager.GetString("locRepeatedOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is an invalid syntax for -v option. It must be name=value..
        /// </summary>
        internal static string locScriptingVarInvalidFormatErr {
            get {
                return ResourceManager.GetString("locScriptingVarInvalidFormatErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is an invalid -v option. Scripting variable names starting with &quot;ascmd&quot; are reserved for command-line arguments..
        /// </summary>
        internal static string locScriptingVarInvalidNameErr {
            get {
                return ResourceManager.GetString("locScriptingVarInvalidNameErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trace file close error: {0}.
        /// </summary>
        internal static string locTraceFileCloseErr {
            get {
                return ResourceManager.GetString("locTraceFileCloseErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trace file error: {0}.
        /// </summary>
        internal static string locTraceFileErr {
            get {
                return ResourceManager.GetString("locTraceFileErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trace file open error: {0}.
        /// </summary>
        internal static string locTraceFileOpenErr {
            get {
                return ResourceManager.GetString("locTraceFileOpenErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is an invalid trace file delimiter. It should only be a single character..
        /// </summary>
        internal static string locTraceInvalidDelimErr {
            get {
                return ResourceManager.GetString("locTraceInvalidDelimErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is an invalid trace file format. Specify &quot;text&quot; or &quot;csv&quot;..
        /// </summary>
        internal static string locTraceInvalidFormatErr {
            get {
                return ResourceManager.GetString("locTraceInvalidFormatErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is an invalid trace file level. Specify &quot;high&quot;, &quot;medium&quot;, &quot;low&quot; or &quot;duration&quot;..
        /// </summary>
        internal static string locTraceInvalidLevelErr {
            get {
                return ResourceManager.GetString("locTraceInvalidLevelErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -T tracing cannot be done over a http or https connection..
        /// </summary>
        internal static string locTraceNoHttpErr {
            get {
                return ResourceManager.GetString("locTraceNoHttpErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trace stopped -- error occurred: .
        /// </summary>
        internal static string locTraceStopErr {
            get {
                return ResourceManager.GetString("locTraceStopErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trace stopped -- completed successfully.
        /// </summary>
        internal static string locTraceStopSuccessMsg {
            get {
                return ResourceManager.GetString("locTraceStopSuccessMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trace write error: {0}.
        /// </summary>
        internal static string locTraceWriteErr {
            get {
                return ResourceManager.GetString("locTraceWriteErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos;: Unknown Option. Enter &apos;-?&apos; or &apos;/?&apos; for help..
        /// </summary>
        internal static string locUnknownOptionErr {
            get {
                return ResourceManager.GetString("locUnknownOptionErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0} {1}.
        /// </summary>
        internal static string locVersion {
            get {
                return ResourceManager.GetString("locVersion", resourceCulture);
            }
        }
    }
}
